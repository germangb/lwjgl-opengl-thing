#version 330

in vec3 vPosition;
in vec3 vNormal;
in vec2 vUv;

uniform mat4 modelViewProjectionMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 viewMatrix;
uniform mat4 shadowMatrix;
uniform int highlight;

out vec3 shadowCoord;
out vec3 lightDirection;
out vec3 position;
out vec3 normal;
out vec2 uv;

void main () {
	shadowCoord = (shadowMatrix * gl_Vertex).xyz;
	vec4 vec = gl_Vertex;
	if (highlight == 1) {
		vec.xyz += normalize(gl_Normal) * 0.1;
	}
	gl_Position = modelViewProjectionMatrix * vec;
	position = (modelViewMatrix * gl_Vertex).xyz;
	normal = (modelViewMatrix * vec4(gl_Normal, 0.0)).xyz;
	uv = gl_MultiTexCoord0.xy;
	lightDirection = (viewMatrix * vec4(1,-2,-4,0)).xyz;
}
